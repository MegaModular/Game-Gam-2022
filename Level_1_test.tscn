[gd_scene load_steps=11 format=2]

[ext_resource path="res://Player/Player1Test.tscn" type="PackedScene" id=1]
[ext_resource path="res://Player/HUD.tscn" type="PackedScene" id=2]
[ext_resource path="res://Environment/Obstacles/YellowPlatform.tscn" type="PackedScene" id=3]
[ext_resource path="res://Environment/Obstacles/GreenPlatform.tscn" type="PackedScene" id=4]
[ext_resource path="res://WaterDistortion.png" type="Texture" id=5]
[ext_resource path="res://PerlinNoise.png" type="Texture" id=6]

[sub_resource type="Shader" id=5]
code = "/**
* Ported from the original unity shader by Erik Roystan Ross
* https://roystan.net/articles/toon-water.html
* https://github.com/IronWarrior/ToonWaterShader
* Camera Depth taken from Bastiaan Olij's video on: https://www.youtube.com/watch?v=Jq3he9Lbj7M
*/

shader_type spatial;

const float SMOOTHSTEP_AA = 0.01;

uniform sampler2D surfaceNoise;
uniform sampler2D distortNoise;

uniform float beer_factor = 0.8;

uniform float foam_distance = 0.01;
uniform float foam_max_distance = 0.4;
uniform float foam_min_distance = 0.04;
uniform vec4 foam_color: hint_color  = vec4(1.0);

uniform vec2 surface_noise_tiling = vec2(1.0, 4.0);
uniform vec3 surface_noise_scroll = vec3(0.03, 0.03, 0.0);
uniform float surface_noise_cutoff: hint_range(0, 1) = 0.777;
uniform float surface_distortion_amount: hint_range(0, 1) = 0.27;

uniform vec4 _DepthGradientShallow: hint_color = vec4(0.325, 0.807, 0.971, 0.725);
uniform vec4 _DepthGradientDeep: hint_color = vec4(0.086, 0.407, 1, 0.749);
uniform float _DepthMaxDistance: hint_range(0, 1) = 1.0;
uniform float _DepthFactor = 1.0;

varying vec2 noiseUV;
varying vec2 distortUV;
varying vec3 viewNormal;

vec4 alphaBlend(vec4 top, vec4 bottom)
{
	vec3 color = (top.rgb * top.a) + (bottom.rgb * (1.0 - top.a));
	float alpha = top.a + bottom.a * (1.0 - top.a);
	
	return vec4(color, alpha);
}

void vertex() {
	viewNormal = (MODELVIEW_MATRIX * vec4(NORMAL, 0.0)).xyz;
	noiseUV = UV * surface_noise_tiling;
	distortUV = UV;
}

void fragment(){
	// https://www.youtube.com/watch?v=Jq3he9Lbj7M
	float depth = texture(DEPTH_TEXTURE, SCREEN_UV).r;
	depth = depth * 2.0 - 1.0;
	depth = PROJECTION_MATRIX[3][2] / (depth + PROJECTION_MATRIX[2][2]);
	depth = depth + VERTEX.z;
	depth = exp(-depth * beer_factor);
	depth = 1.0 - depth;
	
	// Still unsure how to get properly the NORMAL from the camera
	// this was my best attempt
	vec3 existingNormal = vec3(dFdx(depth), dFdy(depth), 0);
	
	float normalDot = clamp(dot(existingNormal.xyz, viewNormal), 0.0, 1.0);
	float foamDistance = mix(foam_max_distance, foam_min_distance, normalDot);
	
	float foamDepth = clamp(depth / foamDistance, 0.0, 1.0);
	float surfaceNoiseCutoff = foamDepth * surface_noise_cutoff;
	
	vec4 distortNoiseSample = texture(distortNoise, distortUV);
	vec2 distortAmount = (distortNoiseSample.xy * 2.0 -1.0) * surface_distortion_amount;
	
	vec2 noise_uv = vec2(
		(noiseUV.x + TIME * surface_noise_scroll.x) + distortAmount.x , 
		(noiseUV.y + TIME * surface_noise_scroll.y + distortAmount.y)
	);
	float surfaceNoiseSample = texture(surfaceNoise, noise_uv).r;
	float surfaceNoiseAmount = smoothstep(surfaceNoiseCutoff - SMOOTHSTEP_AA, surfaceNoiseCutoff + SMOOTHSTEP_AA, surfaceNoiseSample);
	
	float waterDepth = clamp(depth / _DepthMaxDistance, 0.0, 1.0) * _DepthFactor;
	vec4 waterColor = mix(_DepthGradientShallow, _DepthGradientDeep, waterDepth);

	vec4 surfaceNoiseColor = foam_color;
    surfaceNoiseColor.a *= surfaceNoiseAmount;
	vec4 color = alphaBlend(surfaceNoiseColor, waterColor);
	
	ALBEDO = color.rgb;
	ALPHA = color.a;
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 5 )
shader_param/beer_factor = 0.8
shader_param/foam_distance = 0.01
shader_param/foam_max_distance = 0.4
shader_param/foam_min_distance = 0.04
shader_param/foam_color = Color( 1, 1, 1, 1 )
shader_param/surface_noise_tiling = Vector2( 1, 4 )
shader_param/surface_noise_scroll = Vector3( 0.03, 0.03, 0 )
shader_param/surface_noise_cutoff = 0.777
shader_param/surface_distortion_amount = 0.27
shader_param/_DepthGradientShallow = Color( 0.325, 0.807, 0.971, 0.725 )
shader_param/_DepthGradientDeep = Color( 0.086, 0.407, 1, 0.749 )
shader_param/_DepthMaxDistance = 1.0
shader_param/_DepthFactor = 1.0
shader_param/surfaceNoise = ExtResource( 6 )
shader_param/distortNoise = ExtResource( 5 )

[sub_resource type="CubeMesh" id=1]
material = SubResource( 4 )
size = Vector3( 100, 2, 100 )

[sub_resource type="BoxShape" id=2]
extents = Vector3( 25, 1, 25 )

[node name="Main" type="Spatial"]

[node name="CSGSphere" type="CSGSphere" parent="."]
transform = Transform( 33.1356, 0, 0, 0, 5.29983, 0, 0, 0, 37.3754, 2.00414, -3.65119, -1.49806 )
radial_segments = 65
rings = 32

[node name="MeshInstance" type="MeshInstance" parent="."]
transform = Transform( 1.599, 0, 0, 0, 1, 0, 0, 0, 1.599, 2.00414, -1, -11.6677 )
mesh = SubResource( 1 )
material/0 = null

[node name="StaticBody" type="StaticBody" parent="MeshInstance"]
collision_layer = 9

[node name="CollisionShape" type="CollisionShape" parent="MeshInstance/StaticBody"]
shape = SubResource( 2 )

[node name="DirectionalLight" type="DirectionalLight" parent="MeshInstance"]
transform = Transform( -0.616101, 0.0400183, -0.0996592, -0.137855, 0.25864, 0.956086, 0.0640369, 0.602784, -0.153832, 0, 20.414, 0 )
shadow_enabled = true

[node name="Player1" parent="." groups=["yellow"] instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 5.67595, 2.13424, 22.8269 )

[node name="HUD" parent="." instance=ExtResource( 2 )]

[node name="Player2" parent="." groups=["green"] instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -6.05937, 1.87304, 1.90698 )

[node name="GreenPlatform" parent="." instance=ExtResource( 4 )]
transform = Transform( 11.4448, 0, 0, 0, 17.9028, 0, 0, 0, 0.16854, 3.99991, 1.85092, -63.5481 )

[node name="YellowPlatform" parent="." instance=ExtResource( 3 )]
transform = Transform( 11.4211, 0, 0, 0, 32.9424, 0, 0, 0, 0.13332, 3.99672, 0.376325, -5.14824 )

[node name="YellowPlatform2" parent="." instance=ExtResource( 3 )]
transform = Transform( 11.4211, 0, 0, 0, 33.1659, 0, 0, 0, 0.0975489, 3.91489, 0.722574, -23.5387 )
